name: Multi-Repo Integration

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  count_pending_prs:
    runs-on: ubuntu-latest
    outputs:
      pr_indexes: ${{ steps.parse_manifest.outputs.pr_indexes }}  # Sortie avec les indices des PRs
      repo_branches: ${{ steps.parse_manifest.outputs.repo_branches }}  # Sortie avec les repos et branches

    steps:
      - name: Checkout Coordinator Repo
        uses: actions/checkout@v4

      - name: Parse Integration Manifest and Count Repositories in Pending Changesets
        id: parse_manifest
        run: |
          # Extract and count the number of PRs in the pending changeset
          PR_COUNT=$(yq eval '.changesets[0].repositories | length' integration.yaml)

          # Generate a list of PR indices to use in the matrix (0, 1, ..., PR_COUNT-1)
          PR_INDEXES=$(seq 0 $((PR_COUNT - 1)) | tr '\n' ',' | sed 's/,$//')  # Convert to comma-separated list
          PR_INDEXES_JSON="[${PR_INDEXES}]"  # Wrap in brackets to create a JSON array
          
          # Extract repositories and branches and format them for matrix
          REPO_BRANCHES=$(yq eval '.changesets[0].repositories | map({name: .name, branch: .ref})' integration.yaml)

          # Output the PR indexes and repo-branches to pass to the next job
          echo "PR_INDEXES_JSON=${PR_INDEXES_JSON}" >> $GITHUB_ENV
          echo "REPO_BRANCHES_JSON=${REPO_BRANCHES}" >> $GITHUB_ENV

          # Set pr_indexes and repo_branches as outputs
          echo "pr_indexes=${PR_INDEXES_JSON}" >> $GITHUB_OUTPUT
          echo "repo_branches=${REPO_BRANCHES}" >> $GITHUB_OUTPUT

      - name: Verify PR Indexes and Repo Branches
        run: |
          # Verify the PR_INDEXES and REPO_BRANCHES outputs
          echo "PR Indexes: ${{ steps.parse_manifest.outputs.pr_indexes }}"
          echo "Repo Branches: ${{ steps.parse_manifest.outputs.repo_branches }}"

  build_repositories:
    runs-on: ubuntu-latest
    needs: count_pending_prs  # Ce job dépend du job count_pending_prs
    strategy:
      matrix:
        pr_index: ${{ fromJson(needs.count_pending_prs.outputs.pr_indexes) }}  # Utilisation de l'output du job précédent pour créer la matrice
        repo_name: ${{ fromJson(needs.count_pending_prs.outputs.repo_branches) | map(.name) }}  # Extraire les noms des repos
        repo_branch: ${{ fromJson(needs.count_pending_prs.outputs.repo_branches) | map(.branch) }}  # Extraire les branches des repos
    steps:
      - name: Checkout Repository for PR
        run: |
          # Get the repository and branch from the matrix values
          REPO_NAME=${{ matrix.repo_name }}
          REPO_BRANCH=${{ matrix.repo_branch }}
          
          # Checkout the repository with the appropriate branch
          echo "Checking out repository $REPO_NAME on branch $REPO_BRANCH"
          git clone "https://github.com/your-org/$REPO_NAME.git"
          cd $REPO_NAME
          git checkout $REPO_BRANCH
    
      - name: Build Repository
        run: |
          echo "Running build for PR index: ${{ matrix.pr_index }}"
          # Add your build commands here
