name: Multi-Repo Integration

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  count_pending_prs:
    runs-on: ubuntu-latest
    outputs:
      pr_indexes: ${{ steps.parse_manifest.outputs.pr_indexes }}  # Sortie avec les indices des PRs

    steps:
      - name: Checkout Coordinator Repo
        uses: actions/checkout@v4

      - name: Parse Integration Manifest and Count Repositories in Pending Changesets
        id: parse_manifest
        run: |
          # Extract and count the number of PRs in the pending changeset
          PR_COUNT=$(yq eval '.changesets[0].repositories | length' integration.yaml)

          # Generate a list of PR indices to use in the matrix (1, 2, ..., PR_COUNT)
          PR_INDEXES=$(seq 0 $((PR_COUNT - 1)) | tr '\n' ',' | sed 's/,$//')  # Convert to comma-separated list
          PR_INDEXES_JSON="[${PR_INDEXES}]"  # Wrap in brackets to create a JSON array

          # Output the PR indexes to pass to the next job
          echo "PR_INDEXES_JSON=${PR_INDEXES_JSON}" >> $GITHUB_ENV

          # Set pr_indexes as an output
          echo "pr_indexes=${PR_INDEXES_JSON}" >> $GITHUB_OUTPUT

      - name: Verify PR Indexes
        run: |
          # Verify the PR_INDEXES output
          echo "PR Indexes: ${{ steps.parse_manifest.outputs.pr_indexes }}"

  build_repositories:
    runs-on: ubuntu-latest
    needs: count_pending_prs  # Ce job dépend du job count_pending_prs
    strategy:
      matrix:
        pr_index: ${{ fromJson(needs.count_pending_prs.outputs.pr_indexes) }}  # Utilisation de l'output du job précédent pour créer la matrice
    steps:
      - name: Checkout Repository for PR
        run: |
          # Get the repository and branch from the manifest.yaml based on the pr_index
          REPO_NAME=$(yq eval ".changesets[0].repositories[${{ matrix.pr_index }}].name" integration.yaml)
          REPO_BRANCH=$(yq eval ".changesets[0].repositories[${{ matrix.pr_index }}].ref" integration.yaml)
          
          # Checkout the repository with the appropriate branch
          echo "Checking out repository $REPO_NAME on branch $REPO_BRANCH"
          git clone "https://github.com/your-org/$REPO_NAME.git"
          cd $REPO_NAME
          git checkout $REPO_BRANCH
    
      - name: Build Repository
        run: |
          echo "Running build for PR index: ${{ matrix.pr_index }}"
          # Ajoutez vos commandes de build ici
